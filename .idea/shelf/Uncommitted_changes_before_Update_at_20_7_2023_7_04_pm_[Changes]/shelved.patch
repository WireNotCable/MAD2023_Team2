Index: app/src/main/java/sg/edu/np/mad/pennywise/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pennywise;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport android.content.ClipData;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.DecimalFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\nimport sg.edu.np.mad.pennywise.models.Transaction;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener, ViewTransRVInterface{\r\n\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    Toolbar toolbar;\r\n\r\n    //Shared preference\r\n    public String GLOBAL_PREFS = \"myPrefs\";\r\n    public String MY_EMAIL = \"MyEmail\";\r\n\r\n    public String MY_EXPENSE= \"myExpense\";\r\n\r\n    public String MY_STARTDATE = \"myStartDate\";\r\n\r\n    public String MY_ENDDATE = \"myEndDate\";\r\n    public String MY_UID = \"MyUID\";\r\n    SharedPreferences sharedPreferences;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n\r\n        setSupportActionBar(toolbar);\r\n\r\n        // Remove title in homepage\r\n        if (getSupportActionBar() != null) {\r\n            getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n        }\r\n\r\n        // Nav Drawer\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n\r\n        //TextView monthText = findViewById(R.id.sbtextView);\r\n        //String currentMonth = getCurrentMonthMMM();\r\n        //monthText.setText(\"Your Balance : \"+\"(\"+currentMonth+\")\");\r\n\r\n        sharedPreferences = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n        String sharedUID = sharedPreferences.getString(MY_UID, \"\");\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        DocumentReference nameRef = db.collection(\"users\").document(sharedUID);\r\n//        nameRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n//            @Override\r\n//            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n//                DocumentSnapshot document = task.getResult();\r\n//                TextView name = findViewById(R.id.home_name);\r\n//                Object nameText = document.get(\"name\");\r\n//                name.setText(nameText.toString());\r\n//            }\r\n//        });\r\n\r\n\r\n\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n\r\n        profilepic();\r\n        getCardNum();\r\n        threeMiddleButtons();\r\n        getBalance();\r\n        getDashboardItems();\r\n        viewAllTrans();\r\n    }\r\n\r\n    public void profilepic(){\r\n        // Retrieve the uid from the shared prefs\r\n        SharedPreferences prefs = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n        String uid = prefs.getString(MY_UID, \"\");\r\n\r\n        //profile pic\r\n        ImageView profilepic = findViewById(R.id.home_pfp);\r\n        // Retrieve the uid from the shared prefs\r\n        String filename = uid + \".jpg\";\r\n        FirebaseStorage storage = FirebaseStorage.getInstance();\r\n        StorageReference storageRef = storage.getReference();\r\n        StorageReference imageRef = storageRef.child(\"profilepic/\" + filename);\r\n\r\n        imageRef.getDownloadUrl().addOnSuccessListener(uri -> {\r\n            // Load the image into the ImageView using Glide\r\n            Glide.with(this)\r\n                    .load(uri)\r\n                    .into(profilepic);\r\n        }).addOnFailureListener(exception -> {\r\n            // Handle any errors that occurred while fetching the download URL\r\n        });\r\n\r\n        profilepic.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, Profile.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void threeMiddleButtons(){\r\n        ImageButton addtrans = findViewById(R.id.home_addtran);\r\n        addtrans.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, AddTransaction.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        ImageButton setlimit = findViewById(R.id.home_setlimit);\r\n        setlimit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, SetLimit.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        ImageButton transfer = findViewById(R.id.home_transfer);\r\n        transfer.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, Transfer.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void getCardNum() {\r\n        SharedPreferences prefs = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n        String uid = prefs.getString(MY_UID, \"\");\r\n        TextView cardNum = findViewById(R.id.home_cardnum);\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        CollectionReference cardRef = db.collection(\"users\").document(uid).collection(\"addCard\");\r\n\r\n        cardRef.get().addOnCompleteListener(task -> {\r\n            if (task.isSuccessful()) {\r\n                QuerySnapshot querySnapshot = task.getResult();\r\n                if (querySnapshot != null && !querySnapshot.isEmpty()) {\r\n                    // Assuming you have only one document in the \"addCard\" collection\r\n                    DocumentSnapshot document = querySnapshot.getDocuments().get(0);\r\n                    Object cardNumText = document.get(\"number\");\r\n                    if (cardNumText != null) {\r\n                        StringBuilder formatted = new StringBuilder();\r\n                        formatted.append(cardNumText.toString().substring(0, 4));\r\n                        formatted.append(\" \");\r\n                        formatted.append(cardNumText.toString().substring(4, 8));\r\n                        formatted.append(\" \");\r\n                        formatted.append(cardNumText.toString().substring(8, 12));\r\n                        formatted.append(\" \");\r\n                        formatted.append(cardNumText.toString().substring(12));\r\n                        cardNum.setText(formatted);\r\n                    } else {\r\n                        // \"number\" field is not found or is null\r\n                        cardNum.setText(\"\");\r\n                    }\r\n                } else {\r\n                    // collection is empty or the document is not found\r\n                    cardNum.setText(\"\");\r\n                    Toast.makeText(this, \"Card does not exist\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            } else {\r\n                // any errors that occurred while fetching the data\r\n                cardNum.setText(\"\");\r\n            }\r\n        });\r\n    }\r\n\r\n    ArrayList<Transaction> transactionList = new ArrayList<>();\r\n    //Get dashboard items for recycler view\r\n    public void getDashboardItems(){\r\n        sharedPreferences = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n        String sharedEmail = sharedPreferences.getString(MY_EMAIL, \"\");\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        CollectionReference transactionRef = db.collection(\"users\").document(sharedEmail).collection(\"alltransaction\");\r\n        transactionRef.get().addOnCompleteListener(task -> {\r\n            QuerySnapshot querySnapshot = task.getResult();\r\n            List<DocumentSnapshot> documents = querySnapshot.getDocuments();\r\n            for (DocumentSnapshot document : documents){\r\n                Map<String, Object> data = document.getData();\r\n\r\n                //Extract data\r\n                String id = (String) document.getId();\r\n                String title = (String) data.get(\"title\");\r\n                String date = (String) data.get(\"date\");\r\n                double amount = (double) data.get(\"amount\");\r\n                String type = (String) data.get(\"type\");\r\n                String currentMonth = getCurrentMonthMMM();\r\n                String extractMonth = extractMonthFromDate(date);\r\n                String currentYear = getCurrentYear();\r\n                String extractYear = extractYearFromDate(date);\r\n                Transaction transaction = new Transaction(id, title, date, amount, type);\r\n                if (currentMonth.equals(extractMonth) && currentYear.equals(extractYear)){\r\n                    transactionList.add(transaction);\r\n                    Log.v(\"extract\",extractMonth);\r\n                }\r\n            }\r\n            // Sort transactionList based on date\r\n            Collections.sort(transactionList, new Comparator<Transaction>() {\r\n                SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MMM-yyyy\");\r\n\r\n                @Override\r\n                public int compare(Transaction t1, Transaction t2) {\r\n                    try {\r\n                        Date date1 = dateFormat.parse(t1.getTransDate());\r\n                        Date date2 = dateFormat.parse(t2.getTransDate());\r\n                        return date2.compareTo(date1);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    return 0;\r\n                }\r\n            });\r\n            RecyclerView recyclerView = findViewById(R.id.dashboardRecyclerView);\r\n            DashboardAdaptor dashboardAdaptor = new DashboardAdaptor(transactionList, this);\r\n            LinearLayoutManager myLayoutManager = new LinearLayoutManager(this);\r\n            recyclerView.setLayoutManager(myLayoutManager);\r\n            recyclerView.setItemAnimator(new DefaultItemAnimator());\r\n            recyclerView.setAdapter(dashboardAdaptor);\r\n        });\r\n    }\r\n\r\n    // Get balance for the card\r\n    public void getBalance(){\r\n        sharedPreferences = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n        String sharedEmail = sharedPreferences.getString(MY_EMAIL, \"\");\r\n        String TotalExpense = sharedPreferences.getString(MY_EXPENSE, \"\");\r\n        String StartDate = sharedPreferences.getString(MY_STARTDATE,\"\");\r\n        String EndDate = sharedPreferences.getString(MY_ENDDATE,\"\");\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        Log.v(\"email\",sharedEmail);\r\n        CollectionReference transactionRef = db.collection(\"users\").document(sharedEmail).collection(\"alltransaction\");\r\n        transactionRef.get().addOnCompleteListener(task -> {\r\n            QuerySnapshot querySnapshot = task.getResult();\r\n            List<DocumentSnapshot> documents = querySnapshot.getDocuments();\r\n            double totalBalance = 0;\r\n            double TotalSpend = 0;\r\n            for (DocumentSnapshot document : documents){\r\n                Map<String, Object> data = document.getData();\r\n                double amount = (double) data.get(\"amount\");\r\n                String type = (String) data.get(\"type\");\r\n                String date = (String) data.get(\"date\");\r\n                String currentMonth = getCurrentMonthMMM();\r\n                String extractMonth = extractMonthFromDate(date);\r\n                String currentYear = getCurrentYear();\r\n                String extractYear = extractYearFromDate(date);\r\n                if (currentMonth.equals(extractMonth) && currentYear.equals(extractYear)){\r\n                    if (type.equals(\"income\")){\r\n                        totalBalance += amount;\r\n                    }\r\n                    else{\r\n                        totalBalance -= amount;\r\n                        if(date.compareTo(StartDate) >= 0 && date.compareTo(EndDate) <=0)\r\n                        {\r\n                            TotalSpend+=amount;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            DecimalFormat decimalFormat = new DecimalFormat(\"#.##\");\r\n            String roundedBalance = decimalFormat.format(totalBalance);\r\n            SharedPreferences prefs = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = prefs.edit();\r\n            editor.putString(MY_EXPENSE,String.valueOf(TotalSpend));\r\n            editor.apply(); // Apply the changes to SharedPreferences\r\n            TextView balanceTxt = findViewById(R.id.balanceText);\r\n            balanceTxt.setText(\"$ \" + roundedBalance);\r\n        });\r\n    }\r\n\r\n    private String getCurrentMonthMMM() {\r\n        Calendar calendar = Calendar.getInstance();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"MMM\", Locale.getDefault());\r\n        return sdf.format(calendar.getTime());\r\n    }\r\n    private String getCurrentYear() {\r\n        Calendar calendar = Calendar.getInstance();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy\", Locale.getDefault());\r\n        return sdf.format(calendar.getTime());\r\n    }\r\n    private String extractMonthFromDate(String dateString) {\r\n        DateFormat inputDateFormat = new SimpleDateFormat(\"dd-MMM-yyyy\", Locale.ENGLISH);\r\n        DateFormat outputDateFormat = new SimpleDateFormat(\"MMM\", Locale.getDefault());\r\n        try {\r\n            Date date = inputDateFormat.parse(dateString);\r\n            return outputDateFormat.format(date);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n    private String extractYearFromDate(String dateString) {\r\n        DateFormat inputDateFormat = new SimpleDateFormat(\"dd-MMM-yyyy\", Locale.ENGLISH);\r\n        DateFormat outputDateFormat = new SimpleDateFormat(\"yyyy\", Locale.getDefault());\r\n        try {\r\n            Date date = inputDateFormat.parse(dateString);\r\n            return outputDateFormat.format(date);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    // Redirect to View All Transaction Page\r\n    public void viewAllTrans(){\r\n        TextView tv = findViewById(R.id.viewAllTrans);\r\n        tv.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, ViewAllTransactions.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerOpen(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }\r\n        else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n\r\n    // NAVBAR //\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        if (item.getItemId() == R.id.nav_add_transactions){\r\n            Intent intent = new Intent(MainActivity.this, AddTransaction.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_view_transactions){\r\n            Intent intent = new Intent(MainActivity.this, ViewAllTransactions.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_card){\r\n            Intent intent = new Intent(MainActivity.this, ViewCard.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_profile){\r\n            Intent intent = new Intent(MainActivity.this, Profile.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_about){\r\n            Intent intent = new Intent(MainActivity.this, AboutUs.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_currency) {\r\n\r\n            Intent intent = new Intent(MainActivity.this, Currency.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_set_limit){\r\n            Intent intent = new Intent(MainActivity.this, SetLimit.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_transfer){\r\n            Intent intent = new Intent(MainActivity.this, Transfer.class);\r\n            startActivity(intent);\r\n        }\r\n        else if (item.getItemId() == R.id.nav_logout){\r\n            sharedPreferences = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = sharedPreferences.edit();\r\n            editor.clear();\r\n            editor.apply();\r\n            Intent intent = new Intent(MainActivity.this,Login.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n\r\n\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onItemClick(int position) {\r\n        Intent intent = new Intent(MainActivity.this, ViewTransaction.class);\r\n        intent.putExtra(\"From\",\"Main\");\r\n        intent.putExtra(\"Id\",transactionList.get(position).getTransId());\r\n        intent.putExtra(\"Title\",transactionList.get(position).getTransTitle());\r\n        intent.putExtra(\"Amount\",transactionList.get(position).getTransAmt());\r\n        intent.putExtra(\"Date\",transactionList.get(position).getTransDate());\r\n        intent.putExtra(\"Type\",transactionList.get(position).getTransType());\r\n        Log.v(\"hmm\",\"Item clicked, Intent send from MainActivity\");\r\n        startActivity(intent);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pennywise/MainActivity.java b/app/src/main/java/sg/edu/np/mad/pennywise/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pennywise/MainActivity.java	(revision 811dbcd8625c482d73e18cd8ce9ca3a73c39d9c1)
+++ b/app/src/main/java/sg/edu/np/mad/pennywise/MainActivity.java	(date 1689850895632)
@@ -12,6 +12,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 
+import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.ImageButton;
@@ -106,15 +107,15 @@
         String sharedUID = sharedPreferences.getString(MY_UID, "");
         FirebaseFirestore db = FirebaseFirestore.getInstance();
         DocumentReference nameRef = db.collection("users").document(sharedUID);
-//        nameRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
-//            @Override
-//            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
-//                DocumentSnapshot document = task.getResult();
-//                TextView name = findViewById(R.id.home_name);
-//                Object nameText = document.get("name");
-//                name.setText(nameText.toString());
-//            }
-//        });
+        nameRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {
+            @Override
+            public void onComplete(@NonNull Task<DocumentSnapshot> task) {
+                DocumentSnapshot document = task.getResult();
+                TextView name = findViewById(R.id.home_name);
+                Object nameText = document.get("name");
+                name.setText(nameText.toString());
+            }
+        });
 
 
 
@@ -255,7 +256,7 @@
                 Transaction transaction = new Transaction(id, title, date, amount, type);
                 if (currentMonth.equals(extractMonth) && currentYear.equals(extractYear)){
                     transactionList.add(transaction);
-                    Log.v("extract",extractMonth);
+                    Log.v("extract", extractMonth);
                 }
             }
             // Sort transactionList based on date
Index: app/src/main/java/sg/edu/np/mad/pennywise/SignUp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pennywise;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.drawable.AnimationDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationSet;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class SignUp extends AppCompatActivity {\r\n\r\n    private FirebaseAuth auth;\r\n    private EditText signupEmail, signupPassword, signupPhoneNum, signupName;\r\n    private TextInputEditText signupEmail;\r\n\r\n    private Button signupButton;\r\n    private TextView loginRedirectText;\r\n\r\n\r\n    //Shared preference //\r\n    public String GLOBAL_PREFS = \"myPrefs\";\r\n    public String MY_EMAIL = \"MyEmail\";\r\n    SharedPreferences sharedPreferences;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sign_up);\r\n\r\n        View rootView = findViewById(R.id.signupLayOut);\r\n        Animation fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_in_from_bottom);\r\n        AnimationDrawable animationDrawable = (AnimationDrawable) rootView.getBackground();\r\n        animationDrawable.setEnterFadeDuration(2500);\r\n        animationDrawable.setExitFadeDuration(5000);\r\n\r\n        ObjectAnimator translationAnimator = ObjectAnimator.ofFloat(rootView, \"translationY\", rootView.getHeight(), 0f);\r\n        translationAnimator.setDuration(1500);\r\n\r\n        AnimatorSet animatorSet = new AnimatorSet();\r\n        animatorSet.playTogether(translationAnimator, ObjectAnimator.ofFloat(rootView, \"alpha\", 0f, 1f));\r\n\r\n        animatorSet.start();\r\n        rootView.startAnimation(fadeInAnimation);\r\n        animationDrawable.start();\r\n\r\n        auth = FirebaseAuth.getInstance();\r\n        signupEmail = findViewById(R.id.signup_email);\r\n        signupPassword = findViewById(R.id.signup_password);\r\n        signupPhoneNum = findViewById(R.id.signup_contact);\r\n        signupName = findViewById(R.id.signup_Name);\r\n\r\n        signupButton = findViewById(R.id.signup_button);\r\n        loginRedirectText = findViewById(R.id.loginRedirectText);\r\n\r\n\r\n\r\n        signupButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String user = signupEmail.getText().toString().trim();\r\n                String password = signupPassword.getText().toString().trim();\r\n                String phoneNum = signupPhoneNum.getText().toString();\r\n                String name = signupName.getText().toString();\r\n\r\n                // data validation\r\n                if (user.isEmpty()){\r\n                    signupEmail.setError(\"Email cannot be empty\");\r\n                }\r\n                if (password.isEmpty()){\r\n                    signupPassword.setError(\"Password cannot be empty\");\r\n                }\r\n                if (phoneNum.isEmpty()){\r\n                    signupPhoneNum.setError(\"Contact number cannot be empty\");\r\n                }\r\n\r\n                if (name.isEmpty()){\r\n                    signupName.setError(\"Name cannot be empty\");\r\n                }\r\n                else{\r\n                    auth.createUserWithEmailAndPassword(user, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            if(task.isSuccessful()){\r\n                                FirebaseUser firebaseUser = auth.getCurrentUser();\r\n                                sharedPreferences = getSharedPreferences(GLOBAL_PREFS, MODE_PRIVATE);\r\n                                FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n                                Map<String, Object> userData = new HashMap<>();\r\n                                userData.put(\"UID\",auth.getUid());\r\n                                userData.put(\"email\", user);\r\n                                userData.put(\"password\", password); //just cos we wan add\r\n                                userData.put(\"phonenum\", phoneNum);\r\n                                userData.put(\"name\", name);\r\n\r\n                                db.collection(\"users\").document(firebaseUser.getUid()).set(userData);\r\n\r\n                                Toast.makeText(SignUp.this, \"Sign Up Successful\", Toast.LENGTH_SHORT).show();\r\n                                startActivity(new Intent(SignUp.this, Login.class));\r\n                            }\r\n                            else{\r\n                                Toast.makeText(SignUp.this, \"Sign Up Failed\" + task.getException().getMessage(), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    loginRedirectText.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View v) {\r\n                            startActivity(new Intent(SignUp.this, Login.class));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        loginRedirectText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                startActivity(new Intent(SignUp.this, Login.class));\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    private AnimatorSet createBackgroundAnimation(View view) {\r\n        // Implement the background animation here, e.g., using ObjectAnimator\r\n        // You can apply alpha, translation, etc. to the view\r\n        // Return an AnimatorSet that includes all the animations for the background\r\n        // For example:\r\n        AnimatorSet animatorSet = new AnimatorSet();\r\n        ObjectAnimator alphaAnimator = ObjectAnimator.ofFloat(view, \"alpha\", 0f, 1f);\r\n        alphaAnimator.setDuration(1000);\r\n        animatorSet.play(alphaAnimator);\r\n        // Add other animations as needed for the background\r\n\r\n        return animatorSet;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pennywise/SignUp.java b/app/src/main/java/sg/edu/np/mad/pennywise/SignUp.java
--- a/app/src/main/java/sg/edu/np/mad/pennywise/SignUp.java	(revision 811dbcd8625c482d73e18cd8ce9ca3a73c39d9c1)
+++ b/app/src/main/java/sg/edu/np/mad/pennywise/SignUp.java	(date 1689850523111)
@@ -37,7 +37,6 @@
 
     private FirebaseAuth auth;
     private EditText signupEmail, signupPassword, signupPhoneNum, signupName;
-    private TextInputEditText signupEmail;
 
     private Button signupButton;
     private TextView loginRedirectText;
@@ -55,7 +54,7 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sign_up);
 
-        View rootView = findViewById(R.id.signupLayOut);
+        View rootView = findViewById(R.id.signupLayout);
         Animation fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_in_from_bottom);
         AnimationDrawable animationDrawable = (AnimationDrawable) rootView.getBackground();
         animationDrawable.setEnterFadeDuration(2500);
Index: app/src/main/res/layout/activity_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:gravity=\"center\"\r\n    tools:context=\".SignUp\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"30dp\"\r\n        app:cardCornerRadius=\"30dp\"\r\n        app:cardElevation=\"20dp\">\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:orientation=\"vertical\"\r\n            android:padding=\"24dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Sign Up\"\r\n                android:textAlignment=\"center\"\r\n                android:textSize=\"36sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/signup_email\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginTop=\"40dp\"\r\n                android:hint=\"Email\"\r\n                android:padding=\"8dp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/signup_password\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginTop=\"40dp\"\r\n                android:hint=\"Password\"\r\n                android:padding=\"8dp\" />\r\n            <EditText\r\n                android:id=\"@+id/signup_contact\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginTop=\"40dp\"\r\n                android:hint=\"Contact Number\"\r\n                android:padding=\"8dp\"\r\n                android:inputType=\"number\"/>\r\n            <EditText\r\n                android:id=\"@+id/signup_Name\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginTop=\"40dp\"\r\n                android:hint=\"Name\"\r\n                android:padding=\"8dp\" />\r\n\r\n\r\n            <Button\r\n                android:id=\"@+id/signup_button\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"60dp\"\r\n                android:layout_marginTop=\"30dp\"\r\n                android:backgroundTint=\"@color/black\"\r\n                android:text=\"Sign Up\"\r\n                android:textSize=\"18sp\"\r\n                app:cornerRadius=\"200dp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/loginRedirectText\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:padding=\"8dp\"\r\n                android:text=\"Already an user? Login\"\r\n                android:textSize=\"18sp\" />\r\n        </LinearLayout>\r\n        </ScrollView>\r\n    </androidx.cardview.widget.CardView>\r\n\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_sign_up.xml b/app/src/main/res/layout/activity_sign_up.xml
--- a/app/src/main/res/layout/activity_sign_up.xml	(revision 811dbcd8625c482d73e18cd8ce9ca3a73c39d9c1)
+++ b/app/src/main/res/layout/activity_sign_up.xml	(date 1689850498039)
@@ -22,6 +22,7 @@
             android:layout_height="match_parent"
             android:layout_gravity="center_horizontal"
             android:orientation="vertical"
+            android:id="@+id/signupLayout"
             android:padding="24dp">
 
             <TextView
